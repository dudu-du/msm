<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.safety.mapper.PersonMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.safety.entity.Person">
        <id column="id" property="id" />
        <result column="login_id" property="loginId" />
        <result column="person_type" property="personType" />
        <result column="org_id" property="orgId" />
        <result column="tel" property="tel" />
        <result column="birthday" property="birthday" />
        <result column="number" property="number" />
        <result column="email" property="email" />
        <result column="identity_no" property="identityNo" />
        <result column="pic" property="pic" />
        <result column="del" property="del" />
        <result column="createdatetime" property="createdatetime" />
        <result column="modifydatetime" property="modifydatetime" />
    </resultMap>

    <resultMap id="ExtPersonResultMap" type="com.safety.extentity.ExtPerson" extends="BaseResultMap">

    </resultMap>

    <!--局管理员列表结果集-->
    <resultMap id="OfficeAdminResultMap" type="com.safety.entity.OfficeAdmin" extends="BaseResultMap">
        <result column="orgName" property="orgName"/>
        <result column="disable" property="disable" />
        <result column="loginName" property="loginName"/>
    </resultMap>

    <!--校管理员列表结果集-->
    <resultMap id="SchoolAdminResultMap" type="com.safety.entity.SchoolAdmin" extends="BaseResultMap">
        <result column="orgName" property="orgName"/>
        <result column="disable" property="disable" />
        <result column="loginName" property="loginName"/>
    </resultMap>

    <!--教师列表结果集-->
    <resultMap id="TeacherResultMap" type="com.safety.entity.Teacher" extends="BaseResultMap">

        <result column="orgName" property="orgName"/>
        <result column="disable" property="disable" />
        <result column="loginName" property="loginName"/>
    </resultMap>

    <select id="getPersonByLoginId" resultMap="ExtPersonResultMap" parameterType="java.util.Map">
        SELECT
            t1.*,
            t2.loginName1 as loginName
        FROM
            person t1
        LEFT JOIN login t2 ON t1.login_id = t2.id
        WHERE
         t1.login_id = #{org0} and t1.del = '0'
    </select>

    <select id="getRoleListByLid" resultType="java.lang.String" parameterType="java.lang.String">
        select d.code
        from user_role ur,person p,dict d
        where p.id = ur.uid
          and ur.role_id = d.id
          and d.del = 0
          and p.login_id = #{loginId}
    </select>

    <select id="getRoleListByUId" resultType="java.lang.String" parameterType="java.lang.String">
        select d.code
        from user_role ur,person p,dict d
        where p.id = ur.uid
          and ur.role_id = d.id
          and d.del = 0
          and p.id = #{uId}
    </select>
    <select id="getPermssionListByLid" resultType="java.lang.String" parameterType="java.lang.String">
        SELECT DISTINCT
        d. CODE
        FROM
        person p ,
        user_role ur ,
        role_permission rp ,
        dict d
        WHERE
        p.id = ur.uid
        AND ur.role_id = rp.role_id
        AND rp.permission_id = d.id
        AND d.del = 0
        AND p.login_id = #{loginId}
    </select>

    <delete id="removeEntityById" parameterType="java.util.Map">
        update person set del = '1' ,modifydatetime = #{modifydatetime}
        where
        <choose>
            <when test="id.split(',').length==1">
                id = #{id}
            </when>
            <otherwise>
                id in
                <foreach item="item" index="index" collection="id.split(',')"  open="(" separator="," close=")">
                    '${item}'
                </foreach>
            </otherwise>
        </choose>
    </delete>

    <select id="getLoginIdByPersonId" resultType="java.lang.String" parameterType="java.lang.String">
        select
        t1.login_id
        from person t1
        where t1.del = 0
        <choose>
            <when test="id.split(',').length==1">
                and id = #{id}
            </when>
            <otherwise>
                and id in
                <foreach item="item" index="index" collection="id.split(',')"  open="(" separator="," close=")">
                    '${item}'
                </foreach>
            </otherwise>
        </choose>
    </select>
    <select id="getPersonInfoById" resultMap="ExtPersonResultMap" parameterType="java.lang.String">

    </select>
    <select id="getCardNoCount" resultType="java.lang.Integer">
        select count(*) from person where del=0 and card_no=#{cardNo}
    </select>
    <select id="getPersonCountByOrgId" resultType="java.lang.Integer">
        select count(*) from person where del=0 and org_id=#{orgId}
    </select>
    <select id="getDepartmentUserCount" resultType="java.lang.Integer">
        select count(1)
        from (
            SELECT
              count(1)
            FROM
            department_user t1
            LEFT JOIN person t2 ON t1.uid = t2.id
            LEFT JOIN org t3 on t1.department_id = t3.id
            WHERE
            <choose>
                    <when test="departmentId.split(',').length==1">
                        t1.department_id = #{departmentId}
                    </when>
                    <otherwise>
                        t1.department_id in
                        <foreach item="item" index="index" collection="departmentId.split(',')"  open="(" separator="," close=")">
                            '${item}'
                        </foreach>
                    </otherwise>
                </choose>
                GROUP BY t2.id
        )t1
    </select>
    <select id="getDepartmentUserList" resultType="com.safety.extentity.ExtPersonDepartment"
            parameterType="java.util.Map">
        SELECT
            GROUP_CONCAT(t3.name) departmentName,GROUP_CONCAT(t3.id) departmentId,
            t2.*,'1' as isDepartment,t4.loginName1 as loginname
        FROM
            department_user t1
        LEFT JOIN person t2 ON t1.uid = t2.id
        LEFT JOIN org t3 on t1.department_id = t3.id
        LEFT JOIN login t4 ON t2.login_id = t4.id
        WHERE
        <choose>
            <when test="departmentId.split(',').length==1">
                t1.department_id = #{departmentId}
            </when>
            <otherwise>
                t1.department_id in
                <foreach item="item" index="index" collection="departmentId.split(',')"  open="(" separator="," close=")">
                    '${item}'
                </foreach>
            </otherwise>
        </choose>
        GROUP BY t2.id
        <if test="start !=null and pageSize !=null">
            limit #{start} , #{pageSize}
        </if>
    </select>
    <select id="getDepartmentAllByDepartmentId" resultType="java.lang.String">
        SELECT
            id
        FROM
            org
        WHERE
            org_type = 'OT_DEPARTMENT'
        AND org_ids LIKE CONCAT('%',#{departmentId},'%');
    </select>

    <select id="getExistsUser" resultType="java.lang.String" parameterType="java.util.Map">
        SELECT
            uid
        FROM
            department_user
        <trim prefix="where" prefixOverrides="and">
            <if test="userId!=null and userId.length()>0">
                <choose>
                    <when test="userId.split(',').length==1">
                        uid = #{userId}
                    </when>
                    <otherwise>
                        uid in
                        <foreach item="item" index="index" collection="userId.split(',')"  open="(" separator="," close=")">
                            '${item}'
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="departmentId!=null and departmentId.length()>0">
                <choose>
                    <when test="departmentId.split(',').length==1">
                        and department_id = #{departmentId}
                    </when>
                    <otherwise>
                        and department_id in
                        <foreach item="item" index="index" collection="departmentId.split(',')"  open="(" separator="," close=")">
                            '${item}'
                        </foreach>
                    </otherwise>
                </choose>
            </if>
        </trim>
    </select>
    <select id="getExistsDepartment" resultType="java.lang.String" parameterType="java.util.Map">
        SELECT
        department_id as departmentId
        FROM
        department_user
        <trim prefix="where" prefixOverrides="and">
            <if test="userId!=null and userId.length()>0">
                <choose>
                    <when test="userId.split(',').length==1">
                        uid = #{userId}
                    </when>
                    <otherwise>
                        uid in
                        <foreach item="item" index="index" collection="userId.split(',')"  open="(" separator="," close=")">
                            '${item}'
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="departmentId!=null and departmentId.length()>0">
                <choose>
                    <when test="departmentId.split(',').length==1">
                        and department_id = #{departmentId}
                    </when>
                    <otherwise>
                        and department_id in
                        <foreach item="item" index="index" collection="departmentId.split(',')"  open="(" separator="," close=")">
                            '${item}'
                        </foreach>
                    </otherwise>
                </choose>
            </if>
        </trim>
    </select>
    <select id="isMaster" resultType="integer">
        SELECT count(*) from class where teacher = #{userId} and del = 0
    </select>

    <select id="getUserWithDepartmentCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        SELECT
            COUNT(1)
        FROM
            person t1
        LEFT JOIN org t2 ON t1.org_id = t2.id
        where
        t1.del = 0
        and t1.org_id=#{orgId}
        AND t1.person_type = 'PT_TEACHER'
        AND NOT EXISTS (
            SELECT
                t1.uid
            FROM
                user_role t1
            LEFT JOIN dict t2 ON t1.role_id = t2.id
            WHERE
                t2. CODE = 'ROLE_SHCOOLADMIN'
            AND uid = t1.id
        )
    </select>
    <select id="getUserWithDepartment" resultType="com.safety.extentity.ExtPersonDepartment">
        SELECT
            t1.*, IFNULL(t2.del, 1) AS DISABLE,
            t3.loginName1 AS loginName,
            t2. NAME AS orgName,
            t2. CODE AS orgCode,
            t2.org_type AS orgType,
            '0' AS isDepartment,
            GROUP_CONCAT(
              t5.name
            ) departmentName,
            GROUP_CONCAT(
              t5.id
            ) departmentId
        FROM
        person t1
        LEFT JOIN org t2 ON t1.org_id = t2.id
        LEFT JOIN login t3 ON t1.login_id = t3.id
        LEFT JOIN department_user t4 ON t1.id = t4.uid
        LEFT JOIN org t5 on t4.department_id = t5.id
        where
          t1.del = 0
        and t1.org_id=#{orgId}
        AND t1.person_type = 'PT_TEACHER'
        AND NOT EXISTS (
            SELECT
            t1.uid
            FROM
            user_role t1
            LEFT JOIN dict t2 ON t1.role_id = t2.id
            WHERE
            t2. CODE = 'ROLE_SHCOOLADMIN'
            AND uid = t1.id
        )
        GROUP BY
        t1.id
        <if test="start !=null and pageSize !=null">
            limit #{start} , #{pageSize}
        </if>
    </select>
    <select id="getPersonCountByDepartmentId" resultType="java.lang.Integer">
        select count(*) from department_user where department_id=#{departmentId}
    </select>
    <select id="getStudent" resultType="java.util.Map">
        SELECT
            id as studentId,realname,person_type as userType,org_id as orgId,class_number as classNumber,sex,card_no as cardNo
        FROM
            person
        WHERE
            person_type = 'PT_STUDENT'
        AND del = 0
        AND realname = #{studentName}
        AND card_no = #{cardNumber}
    </select>
    <select id="getStudentListByClassNoPage" resultType="com.safety.extentity.ExtPerson">
        SELECT
            t1.*, t2.loginName1 AS loginName
        FROM
            person t1
        LEFT JOIN login t2 ON t1.login_id = t2.id
        AND t1.person_type = 'PT_STUDENT'
        AND t1.del = 0
        AND t1.org_id = #{schoolId}
        <if test="classNumber != null and classNumber.length()>0">
            <choose>
                <when test="classNumber.split(',').length==1">
                    and t1.class_number = #{classNumber}
                </when>
                <otherwise>
                    and t1.class_number in
                    <foreach item="item" index="index" collection="classNumber.split(',')"  open="(" separator="," close=")">
                        '${item}'
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="studentName != null and studentName.length()>0">
            AND t1.realname like CONCAT('%',#{studentName},'%')
        </if>
        WHERE
            t2.id IS NOT NULL
    </select>

    <select id="getMasterByUserId" resultType="com.safety.extentity.ExtPerson">
        SELECT
            DISTINCT t2.id,t2.realname
        FROM
            class t1
        LEFT JOIN person t2 ON t1.teacher = t2.id and t2.del =0
        WHERE
            t2.id IS NOT NULL
            and t1.del = 0
            <choose>
                <when test="userId.split(',').length==1">
                    and t1.teacher = #{userId}
                </when>
                <otherwise>
                    and t1.teacher in
                    <foreach item="item" index="index" collection="userId.split(',')"  open="(" separator="," close=")">
                        '${item}'
                    </foreach>
                </otherwise>
            </choose>
    </select>
    <select id="getUserInfo" resultType="java.util.Map">
        SELECT
            t1.id,
            t2.loginName1 AS loginName,
            t1.realname,
            t3. CODE AS orgCode,
            t3. NAME AS orgName,
            IFNULL(t1.sex,'') as sex,
            IFNULL(t1.tel,'') as tel,
            IFNULL(t1.email,'')as email,
            IFNULL(t1.identity_no,'') AS identityNo,
            IFNULL(t1.birthday,'') as birthday,
            IFNULL(t1.pic,'') as pic
        FROM
            person t1
        LEFT JOIN login t2 ON t1.login_id = t2.id
        AND t2.del = 0
        LEFT JOIN org t3 ON t1.org_id = t3.id
        AND t3.del = 0
        WHERE
            t1.id = #{userId}
        AND t1.del = 0
    </select>
    <select id="getUserInfoHasPassword" resultType="java.util.Map">
       SELECT
            t2.id,
            t1.loginName1 AS loginName,
            t2.realname,
            t3. CODE AS orgCode,
            t3. NAME AS orgName,
            t1.password,
            IFNULL(t2.sex,'') as sex,
            IFNULL(t2.tel,'') as tel,
            IFNULL(t2.email,'')as email,
            IFNULL(t2.identity_no,'') AS identityNo,
            IFNULL(t2.birthday,'') as birthday,
            IFNULL(t2.pic,'') as pic
        FROM
            login t1
        LEFT JOIN person t2 ON t1.id = t2.login_id and t1.del=0 and t2.del=0
				LEFT JOIN org t3 on t3.id = t2.org_id and t3.del = 0
        WHERE
            (
                t1.loginName1 = #{loginName}
                OR t1.loginName2 = #{loginName}
                OR t1.loginName3 = #{loginName}
                OR t1.loginName4 = #{loginName}
            )
        and t2.id is not null
		and t3.id is not null
        LIMIT 1
    </select>
    <select id="getUserInfoByName" resultType="java.util.Map">
        SELECT
            t2.id,
            t1.loginName1 AS loginName,
            t2.realname,
            t3. CODE AS orgCode,
            t3. NAME AS orgName,
            IFNULL(t2.sex,'') as sex,
            IFNULL(t2.tel,'') as tel,
            IFNULL(t2.email,'')as email,
            IFNULL(t2.identity_no,'') AS identityNo,
            IFNULL(t2.birthday,'') as birthday,
            IFNULL(t2.pic,'') as pic
        FROM
            login t1
        LEFT JOIN person t2 ON t1.id = t2.login_id and t1.del=0 and t2.del=0
				LEFT JOIN org t3 on t3.id = t2.org_id and t3.del = 0
        WHERE
            (
                t1.loginName1 = #{loginName}
                OR t1.loginName2 = #{loginName}
                OR t1.loginName3 = #{loginName}
                OR t1.loginName4 = #{loginName}
            )
        and t2.id is not null
		and t3.id is not null
        LIMIT 1
    </select>

    <insert id="addRoleByUser" parameterType="java.util.Map">
        insert user_role(uid,role_id)
        values
        <foreach collection="roles" item="role" index="index" separator=",">
            (
            #{user},#{role}
            )
        </foreach>
    </insert>
    <insert id="saveOrUpdateEntityBatch" parameterType="java.util.List">
        INSERT INTO
        person (
            id,
            login_id,
            realname,
            sex,
            person_type,
            org_id,
            tel,
            number,
            email,
            identity_no,
            card_no,
            student_id,
            class_number,
            start_year,
            birthday,
            pic,
            del,
            createdatetime,
            modifydatetime
        )
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
                #{item.id},
                #{item.loginId},
                #{item.realname},
                #{item.sex},
                #{item.personType},
                #{item.orgId},
                #{item.tel},
                #{item.number},
                #{item.email},
                #{item.identityNo},
                #{item.cardNo},
                #{item.studentId},
                #{item.classNumber},
                #{item.startYear},
                #{item.birthday},
                #{item.pic},
                #{item.del},
                #{item.createdatetime},
                #{item.modifydatetime}
            )
        </foreach> ON DUPLICATE KEY UPDATE
        login_id = VALUES(login_id),
        realname = VALUES(realname),
        sex = VALUES(sex),
        person_type = VALUES(person_type),
        org_id = VALUES(org_id),
        tel= VALUES(tel),
        number = VALUES(number),
        email = VALUES(email),
        identity_no = VALUES(identity_no),
        card_no = VALUES(card_no),
        student_id = VALUES(student_id),
        class_number = VALUES(class_number),
        start_year = VALUES(start_year),
        birthday = VALUES(birthday),
        pic = VALUES(pic),
        del = VALUES(del),
        createdatetime = VALUES(createdatetime),
        modifydatetime = VALUES(modifydatetime)
    </insert>
    <insert id="addDepartmentUser" parameterType="java.util.Map">
        insert into department_user(department_id,uid)
        VALUES
        <foreach collection="userIds" item="userId" index="index" separator=",">
            (
            #{departmentId},#{userId}
            )
        </foreach>
    </insert>
    <insert id="addUserDepartment" parameterType="java.util.Map">
        insert into department_user(department_id,uid)
        VALUES
        <foreach collection="departments" item="department" index="index" separator=",">
            (
            #{department},#{userId}
            )
        </foreach>
    </insert>

    <delete id="deleteRoleByUser" parameterType="string">
        delete from user_role where
        <choose>
            <when test="userId.split(',').length==1">
                 uid = #{userId}
            </when>
            <otherwise>
                 uid in
                <foreach item="item" index="index" collection="userId.split(',')"  open="(" separator="," close=")">
                    '${item}'
                </foreach>
            </otherwise>
        </choose>
    </delete>
    
    <update id="updateMaster" parameterType="java.util.Map">
        UPDATE class set teacher = #{teacherId} ,modifydatetime = #{modifydatetime} where id = #{classId} and del ='0'
    </update>

    <delete id="removeMaster" parameterType="java.util.Map">
        UPDATE
          class
        set teacher = '' ,modifydatetime = #{modifydatetime}
        where del = 0
        <choose>
            <when test="id.split(',').length==1">
                and id = #{id}
            </when>
            <otherwise>
                and id in
                <foreach item="item" index="index" collection="id.split(',')"  open="(" separator="," close=")">
                    '${item}'
                </foreach>
            </otherwise>
        </choose>
    </delete>
    <delete id="removeDepartmentUser" parameterType="java.util.Map">
      DELETE  from department_user
        <trim prefix="where" prefixOverrides="and">
            <if test="userId!=null and userId.length()>0">
                <choose>
                    <when test="userId.split(',').length==1">
                        uid = #{userId}
                    </when>
                    <otherwise>
                        uid in
                        <foreach item="item" index="index" collection="userId.split(',')"  open="(" separator="," close=")">
                            '${item}'
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="departmentId!=null and departmentId.length()>0">
                <choose>
                    <when test="departmentId.split(',').length==1">
                        and department_id = #{departmentId}
                    </when>
                    <otherwise>
                        and department_id in
                        <foreach item="item" index="index" collection="departmentId.split(',')"  open="(" separator="," close=")">
                            '${item}'
                        </foreach>
                    </otherwise>
                </choose>
            </if>
        </trim>
    </delete>
    <delete id="removeOrgDepartmentUser" parameterType="java.lang.String">
        DELETE t1
        from
        department_user t1
        LEFT JOIN org t2 on t1.department_id = t2.id
        where
        <choose>
            <when test="orgId.split(',').length==1">
                t2.department_id = #{orgId}
            </when>
            <otherwise>
                t2.department_id in
                <foreach item="item" index="index" collection="orgId.split(',')"  open="(" separator="," close=")">
                    '${item}'
                </foreach>
            </otherwise>
        </choose>
    </delete>

    <select id="getOfficeAdminCount" resultType="java.lang.Integer" parameterType="com.safety.dto.user.OfficeAdminParams">
        select
        count(1)
        from person t1
        left join login t2 on t1.login_id = t2.id
        <if test="loginName !=null and loginName.length()>0">
            and (t2.loginName1=#{loginName} or t2.loginName2=#{loginName} or t2.loginName3=#{loginName} or t2.loginName4 =#{loginName})
        </if>
        where t1.del = 0
        <if test="loginId != null and loginId.length()>0"> AND t1.login_id=#{loginId}</if>
        <if test="userType != null and userType.length()>0"> AND t1.person_type=#{userType}</if>
        <if test="sex != null and sex.length()>0"> AND t1.sex=#{sex}</if>
        <if test="realName != null and realName.length()>0">AND t1.realname like CONCAT('%',#{realName},'%')</if>
        and t2.id is not null
    </select>

    <select id="getOfficeAdminList" resultMap="OfficeAdminResultMap" parameterType="com.safety.dto.user.OfficeAdminParams">
        select
        t1.*,
        IFNULL(t2.del,1) as disable,
        t2.loginName1 as loginName
        from person t1
        left join login t2 on t1.login_id = t2.id
        <if test="loginName !=null and loginName.length()>0">
            and (t2.loginName1=#{loginName} or t2.loginName2=#{loginName} or t2.loginName3=#{loginName} or t2.loginName4 =#{loginName})
        </if>
        where
        t1.del = 0
        <if test="loginId != null and loginId.length()>0"> AND t1.login_id=#{loginId}</if>
        <if test="userType != null and userType.length()>0"> AND t1.person_type=#{userType}</if>
        <if test="sex != null and sex.length()>0"> AND t1.sex=#{sex}</if>
        <if test="realName != null and realName.length()>0">AND t1.realname like CONCAT('%',#{realName},'%')</if>
        and t2.id is not null
        order by t1.createdatetime desc
        <if test="start !=null and pageSize !=null">
            limit #{start} , #{pageSize}
        </if>
    </select>

    <select id="getSchoolAdminCount" resultType="java.lang.Integer" parameterType="com.safety.dto.user.SchoolAdminParams">
        select
        count(1)
        from person t1 inner join org t3
        on t1.org_id = t3.id and t1.del = 0
        <if test="loginId != null and loginId.length()>0"> AND t1.login_id=#{loginId}</if>
        <if test="orgId != null and orgId.length()>0"> AND t1.org_id=#{orgId}</if>
        <if test="userType != null and userType.length()>0"> AND t1.person_type=#{userType}</if>
        <if test="sex != null and sex.length()>0"> AND t1.sex=#{sex}</if>
        <if test="realName != null and realName.length()>0">AND t1.realname like CONCAT('%',#{realName},'%')</if>
        <if test="orgIds !=null and orgIds.size()>0">
            AND t1.org_id IN
            <foreach item="item" index="index" collection="orgIds"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        left join login t2 on t1.login_id = t2.id
        <if test="loginName !=null and loginName.length()>0">
            and (t2.loginName1=#{loginName} or t2.loginName2=#{loginName} or t2.loginName3=#{loginName} or t2.loginName4 =#{loginName})
        </if>
        WHERE
        EXISTS (
        SELECT
        t1.uid
        FROM
        user_role t1
        LEFT JOIN dict t2 ON t1.role_id = t2.id
        WHERE
        t2.CODE = 'ROLE_SHCOOLADMIN'
        AND uid = t1.id
        )
        <if test="loginName !=null and loginName.length()>0">
            and t2.id is not null
        </if>
    </select>

    <select id="getSchoolAdminList" resultMap="SchoolAdminResultMap" parameterType="com.safety.dto.user.SchoolAdminParams">
        select
        t1.*,
        IFNULL(t2.del,1) as disable,
        t2.loginName1 as loginName,
        t3.name as orgName
        from person t1 inner join org t3
        on t1.org_id = t3.id and t1.del = 0
        <if test="loginId != null and loginId.length()>0"> AND t1.login_id=#{loginId}</if>
        <if test="orgId != null and orgId.length()>0"> AND t1.org_id=#{orgId}</if>
        <if test="userType != null and userType.length()>0"> AND t1.person_type=#{userType}</if>
        <if test="sex != null and sex.length()>0"> AND t1.sex=#{sex}</if>
        <if test="realName != null and realName.length()>0">AND t1.realname like CONCAT('%',#{realName},'%')</if>
        <if test="orgIds !=null and orgIds.size()>0">
            AND t1.org_id IN
            <foreach item="item" index="index" collection="orgIds"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        left join login t2 on t1.login_id = t2.id
        <if test="loginName !=null and loginName.length()>0">
            and (t2.loginName1=#{loginName} or t2.loginName2=#{loginName} or t2.loginName3=#{loginName} or t2.loginName4 =#{loginName})
        </if>
        WHERE
        EXISTS (
        SELECT
        t1.uid
        FROM
        user_role t1
        LEFT JOIN dict t2 ON t1.role_id = t2.id
        WHERE
        t2.CODE = 'ROLE_SHCOOLADMIN'
        AND uid = t1.id
        )
        <if test="loginName !=null and loginName.length()>0">
            and t2.id is not null
        </if>
        <if test="start !=null and pageSize !=null">
            limit #{start} , #{pageSize}
        </if>
    </select>

    <select id="getTeacherCount" resultType="java.lang.Integer" parameterType="com.safety.dto.user.TeacherParams">
        select count(1)
        from person t1
        inner join  org t2 on
        t1.org_id=t2.id
        <if test="isPublic == false" >and t1.del = 0</if>
        <if test="loginId != null and loginId.length()>0"> AND login_id=#{loginId}</if>
        <if test="orgCode != null and orgCode.length()> 0 "> AND t2.code = #{orgCode}</if>
        <if test="orgId != null and orgId.length()>0"> AND org_id=#{orgId}</if>
        <if test="modifyTateTime != null ">AND t1.modifydatetime > #{modifyTateTime}</if>
        <if test="userType != null and userType.length()>0"> AND person_type=#{userType}</if>
        <if test="sex != null and sex.length()>0"> AND sex=#{sex}</if>
        <if test="orgIds !=null and orgIds.size()>0">
            AND org_id IN
            <foreach item="item" index="index" collection="orgIds"
                     open="(" separator="," close=")">
                #{item}
            </foreach>

        </if>
        inner join login t3 on t3.id = t1.login_id
        WHERE
        not EXISTS (
        SELECT
        t1.uid
        FROM
        user_role t1
        LEFT JOIN dict t2 ON t1.role_id = t2.id
        WHERE
        t2. CODE = 'ROLE_SHCOOLADMIN'
        AND uid = t1.id
        )
        <if test="realName != null and realName.length()>0">
            AND (t1.realname like CONCAT('%',#{realName},'%')
            or t3.loginName1 like CONCAT('%',#{realName},'%')
            or t3.loginName2 like CONCAT('%',#{realName},'%')
            or t3.loginName3 like CONCAT('%',#{realName},'%')
            or t3.loginName4 like CONCAT('%',#{realName},'%')
            )
        </if>
    </select>

    <select id="getTeacherList" resultMap="TeacherResultMap" parameterType="com.safety.dto.user.TeacherParams">
        select
        t1.*,
        IFNULL(t2.del,1) as disable,
        t2.loginName1 as loginName,
        t3.name as orgName,
        t3.code as orgCode,
        t3.org_type as orgType
        from person t1 inner join org t3
        on t1.org_id = t3.id <if test="isPublic == false" >and t1.del = 0</if>
        <if test="loginId != null and loginId.length()>0"> AND t1.login_id=#{loginId}</if>
        <if test="orgCode != null and orgCode.length()> 0 "> AND t3.code = #{orgCode}</if>
        <if test="orgId != null and orgId.length()>0"> AND t1.org_id=#{orgId}</if>
        <if test="modifyTateTime != null">AND t1.modifydatetime > #{modifyTateTime}</if>
        <if test="userType != null and userType.length()>0"> AND t1.person_type=#{userType}</if>
        <if test="sex != null and sex.length()>0"> AND t1.sex=#{sex}</if>
        <if test="orgIds !=null and orgIds.size()>0">
            AND t1.org_id IN
            <foreach item="item" index="index" collection="orgIds"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        inner join login t2 on t1.login_id = t2.id
        WHERE
        not EXISTS (
        SELECT
        t1.uid
        FROM
        user_role t1
        LEFT JOIN dict t2 ON t1.role_id = t2.id
        WHERE
        t2. CODE = 'ROLE_SHCOOLADMIN'
        AND uid = t1.id
        )
        <if test="realName != null and realName.length()>0">
            AND (t1.realname like CONCAT('%',#{realName},'%')
            or t2.loginName1 like CONCAT('%',#{realName},'%')
            or t2.loginName2 like CONCAT('%',#{realName},'%')
            or t2.loginName3 like CONCAT('%',#{realName},'%')
            or t2.loginName4 like CONCAT('%',#{realName},'%')
            )
        </if>
        <if test="start !=null and pageSize !=null">
            limit #{start} , #{pageSize}
        </if>
    </select>
</mapper>
