<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.welsee.mapper.UserSubjectClassMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.welsee.entity.UserSubjectClass">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="org_id" property="orgId"/>
        <result column="class_number" property="classNumber"/>
        <result column="subject_id" property="subjectId"/>
        <result column="section_code" property="sectionCode"/>
        <result column="createdatetime" property="createdatetime"/>
        <result column="modifydatetime" property="modifydatetime"/>
    </resultMap>

    <resultMap id="ExtUserSubjectClassMap" type="com.welsee.extentity.ExtUserSubjectClass" extends="BaseResultMap">
        <result column="realname" property="userName"/>
        <result column="subject_name" property="subjectName"/>
    </resultMap>
    <select id="getSubjectUsers" resultMap="ExtUserSubjectClassMap"
            parameterType="java.util.Map">
        SELECT
        t2.realname,t4.subject_name,t1.*
        FROM
        user_subject_class t1
        LEFT JOIN person t2 ON t1.user_id = t2.id
        AND t2.del = 0
        LEFT JOIN class t3 ON t1.org_id = t3.org_id
        and t3.class_number = t1.class_number and t3.del = 0
        LEFT JOIN subject t4 on t1.subject_id = t4.id AND t4.del = 0
        where t2.id IS NOT NULL
        AND t3.id IS NOT NULL
        AND t4.id IS NOT NULL
        AND subject_name is not null and t1.org_id= #{schoolId}
        <if test="classNumber!=null and classNumber.length()>0">
            <choose>
                <when test="classNumber.split(',').length==1">
                    and t1.class_number = #{classNumber}
                </when>
                <otherwise>
                    and t1.class_number in
                    <foreach item="item" index="index" collection="classNumber.split(',')" open="(" separator=","
                             close=")">
                        '${item}'
                    </foreach>
                </otherwise>
            </choose>
        </if>
    </select>

    <resultMap id="extUserSubjectClass" type="com.welsee.extentity.ExtResUserSubjectClass">

        <result column="id" property="id"/>
        <result column="user_name" property="userName"/>
        <result column="subject_name" property="subjectName"/>
        <result column="class_names" property="classNames"/>
        <result column="org_id" property="orgId"/>
        <result column="user_id" property="userId"/>
        <result column="class_numbers" property="classNumbers"/>
        <result column="section_code" property="sectionCode"/>
        <result column="section_name" property="sectionName"/>
        <result column="grade" property="grade"/>
    </resultMap>
    <delete id="deleteUserSubjectClassMap">
        DELETE FROM user_subject_class WHERE user_id = #{userId} AND subject_id = #{subjectId} AND section_code = #{sectionCode} AND class_number like "%"#{classNumbers}"%" AND org_id = #{orgId}
    </delete>
    <delete id="deleteUserSubjectClassMapByIds">
        DELETE FROM user_subject_class WHERE id in (${deleteIds})
    </delete>
    <delete id="removeUserSubjectClassByUserId">
        DELETE FROM user_subject_class WHERE
        <if test="orgId != null and  orgId != ''">
            org_id =#{orgId} and
        </if>
        <choose>

            <when test="userIds.split(',').length == 1">
                user_id = #{userIds}
            </when>
            <otherwise>
                user_id in
                <foreach collection="item" index="index" open="(" close=")" separator=",">
                    '#{item}'
                </foreach>
            </otherwise>
        </choose>
    </delete>
    <delete id="deleteUserSubjectClassMapByClassInfo">
         DELETE FROM user_subject_class  WHERE org_id = #{orgId} AND class_number = #{classNumber}
    </delete>
    <delete id="deleteUserSubjectClassMapBySubjectId">
        DELETE FROM user_subject_class WHERE
        <choose>
            <when test="ids.split(',').length == 1">
                subject_id =  #{ids}
            </when>
            <otherwise>
                subject_id IN
                <foreach collection="ids.split(',')" item="id" open="(" separator="," close=")" index="index">
                    #{id}
                </foreach>
            </otherwise>
        </choose>
    </delete>
    <select id="getUserSubjectClassList" resultType="com.welsee.extentity.ExtResUserSubjectClass">
        SELECT dd.NAME section_name ,res.* FROM
        (SELECT usc.org_id, p.realname user_name,s.subject_name,sg.grade_dict grade_code,s.id subject_id,usc.user_id, GROUP_CONCAT(usc.class_number) class_numbers ,usc.section_code,
        GROUP_CONCAT(CONCAT(SUBSTRING(usc.class_number,6,2) ,'班')) class_names,d.`name` grade,GROUP_CONCAT(usc.id) id
        FROM user_subject_class usc
        LEFT JOIN person p ON usc.user_id = p.id
        LEFT JOIN `subject` s ON usc.subject_id = s.id
        LEFT JOIN class c ON usc.class_number = c.class_number AND c.del = 0 AND c.org_id = #{orgId}
        LEFT JOIN section_grade sg ON c.dict_code = sg.section_dict AND #{schoolYear}-c.start_year = sg.sort
        LEFT JOIN dict d ON sg.grade_dict  = d.`code`
        WHERE usc.org_id = #{orgId} GROUP BY usc.user_id,usc.subject_id,usc.section_code,SUBSTRING(usc.class_number,1,5) ORDER BY usc.class_number desc LIMIT #{start},#{pageSize}) res
        LEFT JOIN dict dd ON res.section_code = dd.`code`
    </select>
    <select id="getUserSubjectClassCount" resultType="java.lang.Integer">
        SELECT count(*) FROM
        (SELECT usc.org_id, p.realname user_name,s.subject_name,sg.grade_dict grade_code,s.id subject_id,usc.user_id, GROUP_CONCAT(usc.class_number order by usc.class_number) class_numbers ,usc.section_code,
        GROUP_CONCAT(CONCAT(SUBSTRING(usc.class_number,6,2) ,'班') order by usc.class_number) class_names,d.`name` grade,GROUP_CONCAT(usc.id) id
        FROM user_subject_class usc
        LEFT JOIN person p ON usc.user_id = p.id
        LEFT JOIN `subject` s ON usc.subject_id = s.id
        LEFT JOIN class c ON usc.class_number = c.class_number AND c.del = 0 AND c.org_id = #{orgId}
        LEFT JOIN section_grade sg ON c.dict_code = sg.section_dict AND #{schoolYear}-c.start_year = sg.sort
        LEFT JOIN dict d ON sg.grade_dict  = d.`code`
        WHERE usc.org_id = #{orgId} GROUP BY usc.user_id,usc.subject_id,usc.section_code,SUBSTRING(usc.class_number,1,5)  ORDER BY usc.user_id) res
        LEFT JOIN dict dd ON res.section_code = dd.`code`
    </select>
    <select id="getUserSubjectClassCountListByFilter" resultType="java.lang.Integer">
        SELECT count(*) FROM
        (
        SELECT usc.org_id, p.realname user_name,s.subject_name,sg.grade_dict grade_code,s.id subject_id,usc.user_id,
        GROUP_CONCAT(usc.class_number) class_numbers ,usc.section_code,
        GROUP_CONCAT(CONCAT(SUBSTRING(usc.class_number,6,2) ,'班')) class_names,d.`name` grade,GROUP_CONCAT(usc.id) id
        FROM user_subject_class usc
        LEFT JOIN person p ON usc.user_id = p.id
        LEFT JOIN `subject` s ON usc.subject_id = s.id
        LEFT JOIN class c ON usc.class_number = c.class_number AND c.del = 0 AND c.org_id = #{orgId}
        LEFT JOIN section_grade sg ON c.dict_code = sg.section_dict AND #{schoolYear}-c.start_year = sg.sort
        LEFT JOIN dict d ON sg.grade_dict = d.`code`
        WHERE usc.org_id = #{orgId}
        <if test="classNumberLike != null and classNumberLike != ''">AND usc.class_number LIKE
            "%"#{classNumberLike}"%"
        </if>
        <if test="subjectId != null and subjectId != ''">AND usc.subject_id = #{subjectId}</if>
        GROUP BY usc.user_id,usc.subject_id,usc.section_code
        ORDER BY usc.user_id
        ) res
        LEFT JOIN dict dd ON res.section_code = dd.`code`
    </select>
    <select id="getUserSubjectClassListByFilter" resultType="com.welsee.extentity.ExtResUserSubjectClass">
        SELECT dd.NAME section_name ,res.* FROM
        ( SELECT usc.org_id, p.realname user_name,s.subject_name,sg.grade_dict grade_code,s.id subject_id,usc.user_id,
        GROUP_CONCAT(usc.class_number) class_numbers ,usc.section_code,
        GROUP_CONCAT(CONCAT(SUBSTRING(usc.class_number,6,2) ,'班')) class_names,d.`name` grade,GROUP_CONCAT(usc.id) id
        FROM user_subject_class usc
        LEFT JOIN person p ON usc.user_id = p.id
        LEFT JOIN `subject` s ON usc.subject_id = s.id
        LEFT JOIN class c ON usc.class_number = c.class_number AND c.del = 0 AND c.org_id = #{orgId}
        LEFT JOIN section_grade sg ON c.dict_code = sg.section_dict AND #{schoolYear}-c.start_year = sg.sort
        LEFT JOIN dict d ON sg.grade_dict = d.`code`
        WHERE usc.org_id = #{orgId}
        <if test="classNumberLike != null and classNumberLike != ''">AND usc.class_number LIKE
            "%"#{classNumberLike}"%"
        </if>
        <if test="subjectId != null and subjectId != ''">AND usc.subject_id = #{subjectId}</if>
        GROUP BY usc.user_id,usc.subject_id,usc.section_code
        ORDER BY usc.user_id LIMIT #{start},#{pageSize}
        ) res
        LEFT JOIN dict dd ON res.section_code = dd.`code`
    </select>
    <select id="getUserSubjectClassCountListByLike" resultType="java.lang.Integer">
        SELECT count(*) FROM
        (SELECT usc.org_id, p.realname user_name,s.subject_name,sg.grade_dict grade_code,s.id subject_id,usc.user_id, GROUP_CONCAT(usc.class_number) class_numbers ,usc.section_code,
        GROUP_CONCAT(CONCAT(SUBSTRING(usc.class_number,6,2) ,'班')) class_names,d.`name` grade,GROUP_CONCAT(usc.id) id
        FROM user_subject_class usc
        LEFT JOIN person p ON usc.user_id = p.id
        LEFT JOIN `subject` s ON usc.subject_id = s.id
        LEFT JOIN class c ON usc.class_number = c.class_number AND c.del = 0 AND c.org_id = #{orgId}
        LEFT JOIN section_grade sg ON c.dict_code = sg.section_dict AND #{schoolYear}-c.start_year = sg.sort
        LEFT JOIN dict d ON sg.grade_dict  = d.`code`
        WHERE usc.org_id = #{orgId} AND p.realname LIKE "%"#{param}"%" GROUP BY usc.user_id,usc.subject_id,usc.section_code ORDER BY usc.user_id) res
        LEFT JOIN dict dd ON res.section_code = dd.`code`
    </select>
    <select id="getUserSubjectClassListByLike" resultType="com.welsee.extentity.ExtResUserSubjectClass">
        SELECT dd.NAME section_name ,res.* FROM
        (SELECT usc.org_id, p.realname user_name,s.subject_name,sg.grade_dict grade_code,s.id subject_id,usc.user_id, GROUP_CONCAT(usc.class_number) class_numbers ,usc.section_code,
        GROUP_CONCAT(CONCAT(SUBSTRING(usc.class_number,6,2) ,'班')) class_names,d.`name` grade,GROUP_CONCAT(usc.id) id
        FROM user_subject_class usc
        LEFT JOIN person p ON usc.user_id = p.id
        LEFT JOIN `subject` s ON usc.subject_id = s.id
        LEFT JOIN class c ON usc.class_number = c.class_number AND c.del = 0 AND c.org_id = #{orgId}
        LEFT JOIN section_grade sg ON c.dict_code = sg.section_dict AND #{schoolYear}-c.start_year = sg.sort
        LEFT JOIN dict d ON sg.grade_dict  = d.`code`
        WHERE usc.org_id = #{orgId} AND p.realname LIKE "%"#{param}"%" GROUP BY usc.user_id,usc.subject_id,usc.section_code ORDER BY usc.user_id LIMIT #{start},#{pageSize}) res
        LEFT JOIN dict dd ON res.section_code = dd.`code`
    </select>
    <select id="getClassSubjectByTeacher" resultMap="ExtUserSubjectClassMap"
            parameterType="java.util.Map">
        SELECT
        t2.realname,t4.subject_name,t1.*
        FROM
        user_subject_class t1
        LEFT JOIN person t2 ON t1.user_id = t2.id
        AND t2.del = 0
        LEFT JOIN class t3 ON t1.org_id = t3.org_id
        and t3.class_number = t1.class_number
        LEFT JOIN subject t4 on t1.subject_id = t4.id
        where subject_name is not null and user_id=#{teacherId}
        <if test="classNumber!=null and classNumber.length()>0">
            <choose>
                <when test="classNumber.split(',').length==1">
                    and t1.class_number = #{classNumber}
                </when>
                <otherwise>
                    and t1.class_number in
                    <foreach item="item" index="index" collection="classNumber.split(',')" open="(" separator=","
                             close=")">
                        '${item}'
                    </foreach>
                </otherwise>
            </choose>
        </if>
    </select>
    <select id="getTeacherAddressList" resultType="com.welsee.extentity.ExtUserSubjectClass">
        SELECT usc.*,p.realname user_name,s.subject_name,p.tel teacher_tel
        FROM user_subject_class usc
        LEFT JOIN person p ON usc.user_id = p.id
        LEFT JOIN SUBJECT s ON usc.subject_id = s.id
        WHERE usc.class_number = #{classNumber} AND usc.org_id = #{orgId}
    </select>
    <select id="getUserSubjectClassListByParam" resultMap="BaseResultMap">
        SELECT * FROM user_subject_class
        WHERE subject_id = #{subjectId} AND section_code = #{sectionCode}
        AND class_number = #{classNumber} AND org_id = #{orgId}
        AND user_id =#{userId}
    </select>
    <select id="getClassByTeacher" resultType="com.welsee.extentity.ExtTeacherClass">
           SELECT
                t3.org_id as orgId,
                t3.class_number as classNumber,
                t6. NAME AS sectionName,
                t5. NAME as gradeName,
                CONCAT(
                    SUBSTRING(t3.class_number, 6, 2),
                    '班'
                ) AS className
            FROM
                person t1
            LEFT JOIN user_subject_class t2 ON t2.user_id = t1.id
            LEFT JOIN class t3 ON t3.org_id = t2.org_id
            AND t3.class_number = t2.class_number
            AND t3.del = 0
            LEFT JOIN section_grade t4 ON t3.dict_code = t4.section_dict
            AND #{schoolYear} - t3.start_year = t4.sort
            LEFT JOIN dict t5 ON t4.grade_dict = t5. CODE
            LEFT JOIN dict t6 ON t3.dict_code = t6. CODE
            WHERE
                t1.id = #{userId}
                AND t3.id IS NOT NULL
                AND t3.id IS NOT NULL
                and t2.id is not null
            GROUP BY t2.org_id, t2.class_number
    </select>

</mapper>
